<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chanlin.pet.dao.UserMapper" >
<resultMap id="BaseResultMap" type="com.chanlin.pet.model.User" >
    <id column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="u_phone" property="uPhone" jdbcType="VARCHAR" />
    <result column="u_password" property="uPassword" jdbcType="VARCHAR" />
    <result column="u_nick" property="uNick" jdbcType="VARCHAR" />
    <result column="u_sign" property="uSign" jdbcType="VARCHAR" />
    <result column="u_age" property="uAge" jdbcType="INTEGER" />
    <result column="u_sex" property="uSex" jdbcType="INTEGER" />
    <result column="u_img" property="uImg" jdbcType="VARCHAR" />
    <result column="u_pid" property="uPid" jdbcType="INTEGER" />
    <result column="longitud" property="longitud" jdbcType="DOUBLE" />
    <result column="latitud" property="latitud" jdbcType="DOUBLE" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    u_id, u_phone, u_password, u_nick, u_sign, u_age, u_sex, u_img, u_pid, longitud, 
    latitud, address
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chanlin.pet.model.User" >
    insert into user (u_id, u_phone, u_password, 
      u_nick, u_sign, u_age, 
      u_sex, u_img, u_pid, longitud, 
      latitud, address)
    values (#{uId,jdbcType=INTEGER}, #{uPhone,jdbcType=VARCHAR}, #{uPassword,jdbcType=VARCHAR}, 
      #{uNick,jdbcType=VARCHAR}, #{uSign,jdbcType=VARCHAR}, #{uAge,jdbcType=INTEGER}, 
      #{uSex,jdbcType=INTEGER}, #{uImg,jdbcType=VARCHAR}, #{uPid,jdbcType=INTEGER}, #{longitud,jdbcType=DOUBLE}, 
      #{latitud,jdbcType=DOUBLE}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chanlin.pet.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        u_id,
      </if>
      <if test="uPhone != null" >
        u_phone,
      </if>
      <if test="uPassword != null" >
        u_password,
      </if>
      <if test="uNick != null" >
        u_nick,
      </if>
      <if test="uSign != null" >
        u_sign,
      </if>
      <if test="uAge != null" >
        u_age,
      </if>
      <if test="uSex != null" >
        u_sex,
      </if>
      <if test="uImg != null" >
        u_img,
      </if>
      <if test="uPid != null" >
        u_pid,
      </if>
      <if test="longitud != null" >
        longitud,
      </if>
      <if test="latitud != null" >
        latitud,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uPhone != null" >
        #{uPhone,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uNick != null" >
        #{uNick,jdbcType=VARCHAR},
      </if>
      <if test="uSign != null" >
        #{uSign,jdbcType=VARCHAR},
      </if>
      <if test="uAge != null" >
        #{uAge,jdbcType=INTEGER},
      </if>
      <if test="uSex != null" >
        #{uSex,jdbcType=INTEGER},
      </if>
      <if test="uImg != null" >
        #{uImg,jdbcType=VARCHAR},
      </if>
      <if test="uPid != null" >
        #{uPid,jdbcType=INTEGER},
      </if>
      <if test="longitud != null" >
        #{longitud,jdbcType=DOUBLE},
      </if>
      <if test="latitud != null" >
        #{latitud,jdbcType=DOUBLE},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chanlin.pet.model.User" >
    update user
    <set >
      <if test="uPhone != null" >
        u_phone = #{uPhone,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        u_password = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uNick != null" >
        u_nick = #{uNick,jdbcType=VARCHAR},
      </if>
      <if test="uSign != null" >
        u_sign = #{uSign,jdbcType=VARCHAR},
      </if>
      <if test="uAge != null" >
        u_age = #{uAge,jdbcType=INTEGER},
      </if>
      <if test="uSex != null" >
        u_sex = #{uSex,jdbcType=INTEGER},
      </if>
      <if test="uImg != null" >
        u_img = #{uImg,jdbcType=VARCHAR},
      </if>
      <if test="uPid != null" >
        u_pid = #{uPid,jdbcType=INTEGER},
      </if>
      <if test="longitud != null" >
        longitud = #{longitud,jdbcType=DOUBLE},
      </if>
      <if test="latitud != null" >
        latitud = #{latitud,jdbcType=DOUBLE},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chanlin.pet.model.User" >
    update user
    set u_phone = #{uPhone,jdbcType=VARCHAR},
      u_password = #{uPassword,jdbcType=VARCHAR},
      u_nick = #{uNick,jdbcType=VARCHAR},
      u_sign = #{uSign,jdbcType=VARCHAR},
      u_age = #{uAge,jdbcType=INTEGER},
      u_sex = #{uSex,jdbcType=INTEGER},
      u_img = #{uImg,jdbcType=VARCHAR},
      u_pid = #{uPid,jdbcType=INTEGER},
      longitud = #{longitud,jdbcType=DOUBLE},
      latitud = #{latitud,jdbcType=DOUBLE},
      address = #{address,jdbcType=VARCHAR}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <!-- 修改密码 -->
  <update id="updatePwdByPhone" parameterType="java.lang.String">
  	update user set u_password = #{uPassword,jdbcType=VARCHAR} where u_phone = #{uPhone,jdbcType=VARCHAR}
  </update>
  <!-- 获取好友列表 -->
  <select id="getUserList" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from user INNER JOIN friends ON friends.f_uid = user.u_id 
	where friends.f_fuid = #{user_id};
  </select>
  <!-- 获取附近好友 -->
  <select id="getLocalUser" resultMap="BaseResultMap">
	  select 
	  <include refid="Base_Column_List" />
	   from user
			where latitude <![CDATA[<>]]> 0
						and longitud > #{left_lat}  
            and longitud < #{right_lat}
            and latitude > #{down_lon}
            and latitude < #{top_lon}
			order by ACOS(SIN((#{lat} * 3.1415) / 180 ) * SIN((latitude * 3.1415) / 180 )   
            +COS((#{lat} * 3.1415) / 180 ) * COS((latitude * 3.1415) / 180 )   
            *COS((#{lon} * 3.1415) / 180 - (longitud * 3.1415) / 180 ) )   
            * 6380 asc limit #{start},#{end}
  </select>
</mapper>